---
apiVersion: v1
kind: Namespace
metadata:
  name: '{{namespace}}'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{namespace}}'
  name: '{{app_name}}'
  labels:
    app.kubernetes.io/name: '{{app_name}}'
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: '{{app_name}}'
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: '{{app_name}}'
    spec:
      containers:
      - image: '{{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com/{{ecr_repo}}:{{image_tag}}'
        imagePullPolicy: Always
        name: '{{app_name}}'
        ports:
        - containerPort: 3000
        env:
        - name: IMAGE_URL
          value: https://{{cdn_url}}/image.jpeg
            
---
apiVersion: v1
kind: Service
metadata:
  namespace: '{{namespace}}'
  name: '{{app_name}}'
  labels:
    app.kubernetes.io/name: '{{app_name}}'
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: '{{app_name}}'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: '{{namespace}}'
  name: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  labels:
    app.kubernetes.io/name: '{{app_name}}'
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: '{{app_name}}'
              port:
                number: 80
